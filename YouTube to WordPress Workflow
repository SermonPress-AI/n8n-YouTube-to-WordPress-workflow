{
  "name": "YT to WP Workflow",
  "nodes": [
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-3.5-turbo",
          "mode": "list",
          "cachedResultName": "GPT-3.5-TURBO"
        },
        "messages": {
          "values": [
            {
              "content": "You are a helpful assistant who formats sermon transcripts into clearly structured paragraphs. Maintain the original meaning and flow of the speaker‚Äôs words, but break up the text into logical chunks for better readability. Do not summarize or skip any content.",
              "role": "system"
            },
            {
              "content": "=Here is a transcript of a sermon. It is currently unformatted and difficult to read. Format it into clear, readable paragraphs. Preserve all the original wording and do not summarize or skip any sentences.\n\nTranscript:\n{{ $json.script }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1360,
        180
      ],
      "id": "6ab87995-696d-4aed-b242-f43b7c29b683",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "uHhM3GMtCxg9mo7L",
          "name": "5MT n8n Sermon Publishing Workflow OpenAI Key"
        }
      }
    },
    {
      "parameters": {
        "content": "## Wordpress flow\n",
        "height": 560,
        "width": 280,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1700,
        -180
      ],
      "typeVersion": 1,
      "id": "7e115048-eb15-4fd9-b4c8-48d2ce9aa975",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "üìù **Supadata API**\n\nCalls the Supadata API to get the transcript for each video.\n\n**How to change:** Update the API URL or key if the service changes. Modify request headers or parameters for other APIs.",
        "height": 400,
        "width": 260,
        "color": 7
      },
      "id": "1344158a-57ea-4844-be95-7e603ce69d2a",
      "name": "supadata Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        760,
        -40
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "üìú **script (Code Node)**\n\nCombines the transcript segments into a single script string.\n\n**How to change:** Change logic to format or preprocess the script differently (e.g., filter out certain lines).",
        "height": 400,
        "width": 260,
        "color": 7
      },
      "id": "fa1f0ac7-b628-4e66-aa59-6e055ba2c0ae",
      "name": "scirpt Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1060,
        -40
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Combine all \"text\" fields from the content array into one string\nlet script = '';\n\n// Loop through all input items\nfor (const item of items) {\n  if (item.json.content && Array.isArray(item.json.content)) {\n    for (const segment of item.json.content) {\n      if (segment.text) {\n        script += segment.text + ' ';\n      }\n    }\n  }\n}\n\nscript = script.trim();\n\nreturn [\n  {\n    json: {\n      script\n    }\n  }\n];\n"
      },
      "id": "ea9c5adf-bf92-4184-8751-d908e71e48f1",
      "name": "Combine into one transcript",
      "type": "n8n-nodes-base.code",
      "position": [
        1140,
        180
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "title": "={{ $('Get YouTube Metadata from video ID').item.json.snippet.title }}",
        "additionalFields": {
          "content": "={{ $('Get YouTube Metadata from video ID').item.json.player.embedHtml }}\n\n{{ $json.message.content }}",
          "status": "draft"
        }
      },
      "type": "n8n-nodes-base.wordpress",
      "typeVersion": 1,
      "position": [
        1760,
        180
      ],
      "id": "8ee40661-8949-4acb-a618-1439af978ad9",
      "name": "Wordpress",
      "credentials": {
        "wordpressApi": {
          "id": "lFYyN14RBwz0R8uh",
          "name": "Wordpress account 12"
        }
      }
    },
    {
      "parameters": {
        "content": "## YouTube Metadata flow\n",
        "height": 560,
        "width": 780,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -100,
        -180
      ],
      "typeVersion": 1,
      "id": "0ccf9166-e434-49bf-b472-f08dd98d2884",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Transcription flow\n",
        "height": 560,
        "width": 900,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        740,
        -180
      ],
      "typeVersion": 1,
      "id": "497aed06-59b2-44cd-99c1-f835511dca75",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "url": "=https://api.supadata.ai/v1/transcript?url=https://youtu.be/{{ $json.id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "[SUPADATA_API_KEY]"
            }
          ]
        },
        "options": {}
      },
      "id": "a3db3383-112f-49d5-83c7-4cb5795643af",
      "name": "Get transcription from Supadata API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        840,
        180
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "youtube-to-wp",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        180
      ],
      "id": "2b88430c-b11c-4796-9ac5-b48b8600e504",
      "name": "Retrieve URL via POST request",
      "webhookId": "493ec790-6eeb-40fa-8a23-5bee203f2626"
    },
    {
      "parameters": {
        "jsCode": "const input = $input.first().json.body.url;\nconst regex = /(?:v=|\\/)([0-9A-Za-z_-]{11})(?:&|$)/;\nconst match = input.match(regex);\n\nif (!match || !match[1]) {\n  throw new Error(\"Invalid YouTube link. Couldn't extract video ID.\");\n}\n\nreturn [{ videoId: match[1] }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        240,
        180
      ],
      "id": "19c61fca-10c8-4ef4-a2e4-0c39205ab391",
      "name": "Extract video ID from URL"
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "get",
        "videoId": "={{ $json.videoId }}",
        "options": {}
      },
      "id": "2c22a18d-bc14-4fb6-93ff-e4973fa1f060",
      "name": "Get YouTube Metadata from video ID",
      "type": "n8n-nodes-base.youTube",
      "position": [
        480,
        180
      ],
      "typeVersion": 1,
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "lSggnTPzpXWI1eoA",
          "name": "YouTube account 3"
        }
      }
    },
    {
      "parameters": {
        "content": "**YouTube API** \n\nCalls the YouTube API to get video metadata.\n\n**How to change:** Update the credentials to the desired YouTube account.",
        "height": 400,
        "width": 260,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        400,
        -40
      ],
      "typeVersion": 1,
      "id": "3a5487a9-dce9-48b6-99aa-e9c4eca0fc57",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "**GPT-3.5 Turbo**\n\nSends transcript to GPT-3.5 Turbo for formatting.\n\n**How to change:** Update the credentials to the desired OpenAI account.",
        "height": 400,
        "width": 260,
        "color": 7
      },
      "id": "07e05617-901a-463c-9bd1-05da9d3ad5ba",
      "name": "scirpt Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1360,
        -40
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "**POST Endpoint** \n\nWaits for a post request to begin service.\n\n**Format:** \n{\n    \"url\": \"[ENTER_YOUTUBE_URL]\"\n}",
        "height": 400,
        "width": 260,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -80,
        -40
      ],
      "typeVersion": 1,
      "id": "b338b515-e8bb-4024-9feb-be13f011d4d0",
      "name": "Sticky Note4"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI": {
      "main": [
        [
          {
            "node": "Wordpress",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine into one transcript": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get transcription from Supadata API": {
      "main": [
        [
          {
            "node": "Combine into one transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve URL via POST request": {
      "main": [
        [
          {
            "node": "Extract video ID from URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract video ID from URL": {
      "main": [
        [
          {
            "node": "Get YouTube Metadata from video ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get YouTube Metadata from video ID": {
      "main": [
        [
          {
            "node": "Get transcription from Supadata API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "",
  "meta": {
    "instanceId": "f318f1eeb582bef69a56797ad1f28184a54cfe51b0e461ee190c5740946ea07e"
  },
  "tags": []
}
